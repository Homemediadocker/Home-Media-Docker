"use strict";(self.webpackChunkdocker_docs=self.webpackChunkdocker_docs||[]).push([[1061],{1185:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});var i=s(4848),o=s(8453);const t={id:"setup-env",title:"Setup your Env",description:"Commands to setup your environment",sidebar_position:2},a="Env Setup",r={id:"getting-started/setup-env",title:"Setup your Env",description:"Commands to setup your environment",source:"@site/docs/getting-started/setup-env.mdx",sourceDirName:"getting-started",slug:"/getting-started/setup-env",permalink:"/Home-Media-Docker/docs/getting-started/setup-env",draft:!1,unlisted:!1,editUrl:"https://github.com/Homemediadocker/docs/edit/main/docs/getting-started/setup-env.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"setup-env",title:"Setup your Env",description:"Commands to setup your environment",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Prerequisites",permalink:"/Home-Media-Docker/docs/getting-started/prerequisites"},next:{title:"Docker Info",permalink:"/Home-Media-Docker/docs/getting-started/docker-info"}},l={},d=[{value:"Default Container Location",id:"default-container-location",level:2},{value:"Compose Profiles",id:"compose-profiles",level:2},{value:"Specific Compose Project Info <code>.env</code>",id:"specific-compose-project-info-env",level:2},{value:"Nord VPN Variables",id:"nord-vpn-variables",level:3},{value:"Private Key / TOKEN",id:"private-key--token",level:4},{value:"IP Configuration",id:"ip-configuration",level:4},{value:"UID/GID",id:"uidgid",level:3},{value:"Local Shares (Recommended)",id:"local-shares-recommended",level:3},{value:"Samba",id:"samba",level:3},{value:"SMB (Samba) Shares User and Pass",id:"smb-samba-shares-user-and-pass",level:4},{value:"SMB UID and GID",id:"smb-uid-and-gid",level:4},{value:"Network Shares",id:"network-shares",level:4},{value:"Jellyseer",id:"jellyseer",level:3},{value:"Transmission",id:"transmission",level:3},{value:"Dashy",id:"dashy",level:3},{value:"Pihole",id:"pihole",level:3},{value:"ZWave JS and Zigbee2MQTT",id:"zwave-js-and-zigbee2mqtt",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"env-setup",children:"Env Setup"}),"\n",(0,i.jsxs)(n.admonition,{title:"Heads Up!",type:"tip",children:[(0,i.jsxs)(n.p,{children:["Each compose-file has its own ",(0,i.jsx)(n.code,{children:".env"})," file associated with it for modularity. Since there are a lot of different ways to spin up your environment, you can either copy the parts you want from this project and use them individually, or use the project as is, which you can do in an incremental way."]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Do this to create your ",(0,i.jsx)(n.code,{children:".env"})," files:"]}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"./scripts/copyenv.sh\n"})}),(0,i.jsxs)(n.p,{children:["You will need to adjust the newly created ",(0,i.jsx)(n.code,{children:".env"})," file with values specific to your machine. These values are marked with a comment ",(0,i.jsx)(n.code,{children:"#CHANGE_ME"})," - there may be a lot more you need to change but the project will spin up as-is. (Like credentials or small config options)"]}),(0,i.jsx)(n.p,{children:"Literally everything in the docker compose files are variablized as much as possible so all you have to change is the associated .env variable."})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("strong",{children:"root .env file explained"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'## CONTAINER  DATA LOCATION\n# This will place the container data in the current repo location.\n# You can change this and all data will be placed in that location.\nDEFAULT_CONTAINER_DATA_LOCATION="../../.containers" #CHANGE_ME if you want to house your data elsewhere outside of this project directory e.g. a network volume /media/my-network-smb/container-data\nPROJECT_HOSTNAME="localhost" #CHANGE_ME if you are hosting outside of your local machine\n\n#### TRAEFIK and AUTHENTIK GLOBALS\nCF_API_EMAIL="" #CHANGE_ME\nCF_DNS_API_TOKEN="" #CHANGE_ME\nACME_DNS_CHALLENGE_PROVIDER="cloudflare" #CHANGE_ME\nTRAEFIK_TLS_CERTRESOLVER="cloudflare" #CHANGE_ME\nTRAEFIK_DASHBOARD_CREDENTIALS=admin:$$2y$$05$$cqTXRio8juH740Wo7m4y5OWFbQKB0eTaHexKPYmssn4qctTe8ElQe #CHANGE_ME\nTRAEFIK_NETLIFY_TOKEN="asdfasdfasdfasdfasdfasdfasdfasdf" #CHANGE_ME\n\n## COMPOSE_PROFILES ---- Use this variable to select which containers you would like to spin up.\n## Or you can just pass "all" into the variable and it will spin up everything (except the media server, that requires you to pass it in yourself)\n# COMPOSE_PROFILES=all\n\n## or all with media server\n# COMPOSE_PROFILES=all,jellyfin\n\n## Or just individually comma separate your services.\nCOMPOSE_PROFILES=bookstack,dashy,duplicati,jellyseerr,komga,pihole,portainer,prowlarr,radarr,sonarr,transmission,vpn,jellyfin,homeassistant,zwavejs,zigbee2mqtt,mealie\n\n### ENABLE TRAEFIK - keep COMPOSE_PROFILES above\nCOMPOSE_PROFILES=${COMPOSE_PROFILES},traefik ## Not required but recommeneded for reverse proxy\n\n### ENABLE AUTHENTIK - keep COMPOSE_PROFILES above and Traefik\n# COMPOSE_PROFILES=${COMPOSE_PROFILES},authentik\n\n## OPTIONS ---- bookstack,dashy,duplicati,jellyseerr,komga,pihole,portainer,prowlarr,radarr,sonarr,transmission,vpn\n## MORE OPTIONS- jellyfin,emby,plex,homeassistant,zwavejs,zigbee2mqtt,homeAutomation,all\n\n############################################\n########## CONTAINER NAMES #################\n############################################\n\n## User Host Machine - unix machines can find this by doing `id <username>`\nUID="1000" #CHANGE_ME\nGID="1000" #CHANGE_ME\nTIMEZONE="America/Chicago" #CHANGE_ME - This is Central Time Zone by default\n\n## Local Paths\nLOCAL_MOVIES_PATH="/Volumes/Movies" #CHANGE_ME\nLOCAL_TV_PATH="/Volumes/Television" #CHANGE_ME\nLOCAL_BOOKS_PATH="/Volumes/Books" #CHANGE_ME\nLOCAL_DOWNLOADS_PATH="/Volumes/Downloads" #CHANGE_ME\nLOCAL_BACKUPS_PATH="/Volumes/Backups" #CHANGE_ME\n\n## Samba\nSMB_USER="samba" #CHANGE_ME\nSMB_PASS="test" #CHANGE_ME\n\n## unix machines can find this by doing `id <username>` for the desired user\'s id on that machine\nSMB_UID="12312" #CHANGE_ME\nSMB_GID="123123" #CHANGE_ME\n\n## Network Paths\nMOVIE_NETWORK_SHARE="//IP.IP.IP.IP/SHARENAME" #CHANGE_ME\nTV_NETWORK_SHARE="//IP.IP.IP.IP/SHARENAME" #CHANGE_ME\n\nPIHOLE_NETWORK_GATEWAY="192.168.1.1" #CHANGE_ME\nPIHOLE_NETWORK_ADDRESS_POOL="192.168.1.0/24" #CHANGE_ME\nPIHOLE_NETWORK_INTERFACE="eth0" #CHANGE_ME\n\nDUPLICATI_HOST_PORT="8200"\nTRANSMISSION_HOST_PORT="9091"\nTRANSMISSION_SEED_DISCOVERY_PORT_TCP="51413"\nTRANSMISSION_SEED_DISCOVERY_PORT_UDP="51413"\n\n'})})]}),"\n",(0,i.jsx)(n.h2,{id:"default-container-location",children:"Default Container Location"}),"\n",(0,i.jsxs)(n.p,{children:["The default location where all container data is persisted is in ",(0,i.jsx)(n.code,{children:"./.containers/*"})," this is in the project directory. You can change this easily to point at your own home directory if you would like it more easily accessible."]}),"\n",(0,i.jsx)(n.h2,{id:"compose-profiles",children:"Compose Profiles"}),"\n",(0,i.jsx)(n.p,{children:"This is an interesting feature in docker that allows this project to essentially work with feature flags."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"COMPOSE_PROFILES=...\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Doing this allows you to enable whatever services you would like to run in the setup down to the most granular level. This variable is set when the ",(0,i.jsx)(n.a,{href:"/Home-Media-Docker/docs/getting-started/helper-scripts",children:"helper-scripts"})," are run as well. This allows you to make minimal changes to the yaml files themselves and only make ",(0,i.jsx)(n.code,{children:".env"})," changes."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["See ",(0,i.jsx)(n.a,{href:"/Home-Media-Docker/docs/getting-started/docker-info",children:"Docker Info"})," for more information regarding including other services."]})}),"\n",(0,i.jsxs)(n.h2,{id:"specific-compose-project-info-env",children:["Specific Compose Project Info ",(0,i.jsx)(n.code,{children:".env"})]}),"\n",(0,i.jsx)(n.h3,{id:"nord-vpn-variables",children:"Nord VPN Variables"}),"\n",(0,i.jsx)(n.h4,{id:"private-key--token",children:"Private Key / TOKEN"}),"\n",(0,i.jsx)(n.admonition,{title:"Important!",type:"info",children:(0,i.jsxs)(n.p,{children:["Token and subscription to NordVPN Is needed to use this.\n",(0,i.jsx)(n.a,{href:"https://support.nordvpn.com/hc/en-us/articles/20286980309265-How-to-use-a-token-with-NordVPN-on-Linux",children:"See here"})," for configuring/retrieving your ",(0,i.jsx)(n.code,{children:"TOKEN"})," in Linux."]})}),"\n",(0,i.jsx)(n.p,{children:"This is required to run Nord VPN. Without it, the vpn will not start up or be linked to an account."}),"\n",(0,i.jsx)(n.h4,{id:"ip-configuration",children:"IP Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'VPN_DNS="8.8.8.8,8.8.4.4" #CHANGE_ME - this is google\'s DNS if that works for you\nVPN_ALLOWED_IPS="0.0.0.0/0" #CHANGE_ME - this allows all IPs\nVPN_NET_LOCAL="172.16.0.0/12,192.168.0.0/16" #CHANGE_ME if your network doesn\'t fit this schema\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"VPN_ALLOWED_IPS"})," is just a filler - this allows all IPs to connect to your instance. Configure this with a proper subnet here with allowed hosts to connect."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"VPN_NET_LOCAL"})," - These are local IP Addresses. This should work for most home networks. This is a comma-separated list of IP addresses with allowed CIDR ranges."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"uidgid",children:"UID/GID"}),"\n",(0,i.jsx)(n.p,{children:"This is specific to your host machine's user ID and group ID. If you run on a Unix based system then you can find these values for a user by doing the following:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"id <username>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"local-shares-recommended",children:"Local Shares (Recommended)"}),"\n",(0,i.jsx)(n.p,{children:"Mount the drives you want on your host machine and have them setup to connect on boot. Then reference those paths in your variables. Comment out what you don't need."}),"\n",(0,i.jsxs)(n.admonition,{title:"Pro Tip",type:"tip",children:[(0,i.jsx)(n.p,{children:"Doing it this way vs the network route ensures that the network paths are connected via your host machine. Docker networking can be a pain, so local is recommended. However, if you want to use Samba shares, you can, just be prepared to change the docker-compose file a lot."}),(0,i.jsx)(n.p,{children:"Using local also has way less headaches if you are unfamiliar with docker's volume setup."}),(0,i.jsx)(n.p,{children:"Emby and Jellyfin can also do realtime monitoring, but they do not work with Network shares! If you mount the network share on your host machine and then make it local to the container, it doesn't know the difference! You can have realtime monitoring without having to deal with network shares in the docker container!"})]}),"\n",(0,i.jsx)(n.p,{children:"These are examples using network shares mounted locally on my own Macbook setup:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'## Local Paths\nLOCAL_MOVIES_PATH="/Volumes/Movies" #CHANGE_ME\nLOCAL_TV_PATH="/Volumes/Television" #CHANGE_ME\nLOCAL_BOOKS_PATH="/Volumes/Books" #CHANGE_ME\nLOCAL_DOWNLOADS_PATH="/Volumes/Downloads" #CHANGE_ME\n'})}),"\n",(0,i.jsx)(n.h3,{id:"samba",children:"Samba"}),"\n",(0,i.jsx)(n.h4,{id:"smb-samba-shares-user-and-pass",children:"SMB (Samba) Shares User and Pass"}),"\n",(0,i.jsx)(n.p,{children:"This is specifically for mounting network shares. If you do not need this (i.e. if the host machine mounts the drives before docker spins up) then you can comment them out."}),"\n",(0,i.jsx)(n.h4,{id:"smb-uid-and-gid",children:"SMB UID and GID"}),"\n",(0,i.jsx)(n.p,{children:"This may or may not be the same as the UID and GID above. For that reason I have separated it into different variables (if you needed to have only readonly access for a user or something)."}),"\n",(0,i.jsx)(n.h4,{id:"network-shares",children:"Network Shares"}),"\n",(0,i.jsx)(n.p,{children:"These are the IP Addresses and share names related to the network shares that you would like to mount as SMB shares."}),"\n",(0,i.jsx)(n.h3,{id:"jellyseer",children:"Jellyseer"}),"\n",(0,i.jsxs)(n.p,{children:["Change this to be either ",(0,i.jsx)(n.code,{children:"jellyfin"}),", ",(0,i.jsx)(n.code,{children:"emby"}),", or ",(0,i.jsx)(n.code,{children:"plex"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'JELLYSEER_TYPE="jellyfin" #CHANGE_ME - based on what you decide for media server\n'})}),"\n",(0,i.jsx)(n.h3,{id:"transmission",children:"Transmission"}),"\n",(0,i.jsx)(n.p,{children:"The username and password is here in the env file. Please do change this and document it."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'## TRANSMISSION\nTRANSMISSION_USER="transmission" #CHANGE_ME\nTRANSMISSION_PASS="noissimsnart" #CHANGE_ME\n'})}),"\n",(0,i.jsx)(n.h3,{id:"dashy",children:"Dashy"}),"\n",(0,i.jsx)(n.p,{children:"This is where the default configuration that ships with this project is based. This location can be changed if you would like to create a new config file, or would like to import someone else's."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'DASHY_CONFIG_LOCATION="./dashy-config.yml"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"pihole",children:"Pihole"}),"\n",(0,i.jsx)(n.p,{children:"The PiHole web password is defined here. Please change this from the default."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'PIHOLE_SECURE_WEB_PASSWORD="pihole"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"zwave-js-and-zigbee2mqtt",children:"ZWave JS and Zigbee2MQTT"}),"\n",(0,i.jsx)(n.p,{children:"If you decide to use ZWaveJS and Home Assistant, you will need to setup the USB dongle for the zwave network to function:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'ZWAVE_STICK_DEVICE_PATH="/path/to/usb" #CHANGE_ME\nZIGBEE_STICK_DEVICE_PATH="/path/to/usb" #CHANGE_ME\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var i=s(6540);const o={},t=i.createContext(o);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);