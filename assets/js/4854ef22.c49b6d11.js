"use strict";(self.webpackChunkdocker_docs=self.webpackChunkdocker_docs||[]).push([[7017],{2109:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var t=i(4848),n=i(8453);const r={id:"pihole",title:"PiHole",description:"PiHole is a DNS manager and network AD Blocker",sidebar_position:1},s=void 0,d={id:"other-services/pihole",title:"PiHole",description:"PiHole is a DNS manager and network AD Blocker",source:"@site/docs/other-services/pihole.mdx",sourceDirName:"other-services",slug:"/other-services/pihole",permalink:"/Home-Media-Docker/docs/other-services/pihole",draft:!1,unlisted:!1,editUrl:"https://github.com/Homemediadocker/docs/edit/main/docs/other-services/pihole.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"pihole",title:"PiHole",description:"PiHole is a DNS manager and network AD Blocker",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Dashboards",permalink:"/Home-Media-Docker/docs/other-services/dashboards"},next:{title:"Wiki/Notes",permalink:"/Home-Media-Docker/docs/other-services/wiki"}},l={},c=[{value:"PiHole",id:"pihole",level:2},{value:"PiHole Example Docker Compose",id:"pihole-example-docker-compose",level:3}];function a(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h2,{id:"pihole",children:"PiHole"}),"\n",(0,t.jsxs)(o.admonition,{title:"Information",type:"info",children:[(0,t.jsx)(o.p,{children:"This is behind a separate profile. Configure this on your network with caution. This could block things unnecessarily, but can be very useful to block ads without needing an extension to do so."}),(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["For more information, please refer to the ",(0,t.jsx)(o.a,{href:"https://docs.pi-hole.net/",children:"PiHole Docs"})]}),"\n"]})]}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"Just pihole Commands"}),"\n"]}),"\n",(0,t.jsxs)(o.table,{children:[(0,t.jsx)(o.thead,{children:(0,t.jsxs)(o.tr,{children:[(0,t.jsx)(o.th,{children:"Type"}),(0,t.jsx)(o.th,{children:"Command"})]})}),(0,t.jsxs)(o.tbody,{children:[(0,t.jsxs)(o.tr,{children:[(0,t.jsx)(o.td,{children:"Start"}),(0,t.jsx)(o.td,{children:(0,t.jsx)(o.code,{children:"docker compose up pihole -d"})})]}),(0,t.jsxs)(o.tr,{children:[(0,t.jsx)(o.td,{children:"Shutdown"}),(0,t.jsx)(o.td,{children:(0,t.jsx)(o.code,{children:"docker compose down pihole"})})]})]})]}),"\n",(0,t.jsx)("img",{src:"/Home-Media-Docker/img/pihole.png",alt:"pihole"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"Once started, pihole should be hit from this url:"}),"\n"]}),"\n",(0,t.jsxs)(o.table,{children:[(0,t.jsx)(o.thead,{children:(0,t.jsxs)(o.tr,{children:[(0,t.jsx)(o.th,{}),(0,t.jsx)(o.th,{children:"URL"})]})}),(0,t.jsxs)(o.tbody,{children:[(0,t.jsxs)(o.tr,{children:[(0,t.jsx)(o.td,{children:"Non-SSL (Web UI)"}),(0,t.jsx)(o.td,{children:(0,t.jsx)(o.a,{href:"http://localhost:8880/admin",children:"http://localhost:8880/admin"})})]}),(0,t.jsxs)(o.tr,{children:[(0,t.jsx)(o.td,{children:"Image"}),(0,t.jsxs)(o.td,{children:[(0,t.jsx)(o.a,{href:"https://hub.docker.com/r/pihole/pihole",children:"pihole/pihole"}),"(Docker Hub)"]})]})]})]}),"\n",(0,t.jsx)(o.h3,{id:"pihole-example-docker-compose",children:"PiHole Example Docker Compose"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yaml",children:'services:\n  pihole:\n    container_name: ${PIHOLE_CONTAINER_NAME}\n    image: pihole/pihole:latest\n    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"\n    ports:\n      - "53:53/tcp"\n      - "53:53/udp"\n      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server\n      - "${PIHOLE_HOST_PORT}:80/tcp" # Web interface -- http://<ipaddress>:${PIHOLE_HOST_PORT}/admin\n    environment:\n      TZ: ${TIMEZONE}\n      WEBPASSWORD: ${PIHOLE_SECURE_WEB_PASSWORD}\n    labels:\n      - "traefik.enable=true"\n      - "traefik.http.routers.${PIHOLE_CONTAINER_NAME}.rule=Host(`${PIHOLE_CONTAINER_NAME}.${PROJECT_HOSTNAME}`)"\n      - "traefik.http.routers.${PIHOLE_CONTAINER_NAME}.entrypoints=https"\n      - "traefik.http.routers.${PIHOLE_CONTAINER_NAME}.tls=true"\n      - "traefik.http.middlewares.${PIHOLE_CONTAINER_NAME}.addprefix.prefix=/admin"\n      - "traefik.http.services.${PIHOLE_CONTAINER_NAME}.loadbalancer.server.port=80"\n    # Volumes store your data between container upgrades\n    volumes:\n      - "${DEFAULT_CONTAINER_DATA_LOCATION}/PiHole/config:/etc/pihole"\n      - "${DEFAULT_CONTAINER_DATA_LOCATION}/PiHole/etc-dnsmasq.d:/etc/dnsmasq.d"\n    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities\n    cap_add:\n      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed\n    restart: unless-stopped\n    networks:\n      homelab:\n      pihole_network:\n        ipv4_address: "${PIHOLE_STATIC_IP_ADDRESS}" #update, assign open ip manually\n    profiles:\n      - all\n      - pihole\n'})})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,o,i)=>{i.d(o,{R:()=>s,x:()=>d});var t=i(6540);const n={},r=t.createContext(n);function s(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);